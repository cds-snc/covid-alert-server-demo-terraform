name: "Terraform"

on:
  push:
    branches:
      - master
  pull_request:
    paths:
      - "server/aws/*"
      - ".github/workflows/*"

defaults:
  run:
    shell: bash
    working-directory: server/aws

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ca-central-1
  BACKEND_BUCKET: ${{ secrets.BACKEND_BUCKET }}
  TF_VAR_ecs_task_key_retrieval_env_hmac_key: ${{ secrets.TF_VAR_ecs_task_key_retrieval_env_hmac_key }}
  TF_VAR_ecs_task_key_retrieval_env_ecdsa_key: ${{ secrets.TF_VAR_ecs_task_key_retrieval_env_ecdsa_key }}
  TF_VAR_ecs_task_key_submission_env_key_claim_token: ${{ secrets.TF_VAR_ecs_task_key_submission_env_key_claim_token }}
  TF_VAR_rds_server_db_password: ${{ secrets.TF_VAR_rds_server_db_password }}
  TF_VAR_route53_zone_name: ${{ secrets.TF_VAR_route53_zone_name }}
  TF_VAR_new_key_claim_allow_list: ${{ secrets.TF_VAR_new_key_claim_allow_list }}
  TF_VAR_cloudfront_custom_header: ${{ secrets.TF_VAR_cloudfront_custom_header }}
  TF_VAR_environment: ${{ secrets.TF_VAR_environment }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TF_VAR_github_sha: ef00a18013fe5a8ca08e5932ea638606d15a7b2e
  TF_VAR_metrics_username: ${{ secrets.METRICS_USERNAME }}
  TF_VAR_metrics_password: ${{ secrets.METRICS_PASSWORD }}

jobs:
  terraform-plan:
    if: github.ref != 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.4

      - name: Terraform Init
        run: |
          terraform init

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan -input=false

  terraform-security-scan:
    if: github.ref != 'refs/heads/master'
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Terraform security scan
        uses: triat/terraform-security-scan@v1.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  terraform-apply:
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
          terraform_version: 0.13.4

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Init
      run: |
        terraform init

    - name: Terraform Plan
      run: terraform plan -input=false -out terraform.tfplan

    - name: Terraform Apply
      run: terraform apply -input=false -auto-approve terraform.tfplan
